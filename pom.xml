<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jugnicaragua.demos</groupId>
    <artifactId>demoJakarta10JSF</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>demoJakarta10JSF</name>
    <packaging>war</packaging>

    <description>A Jakarta EE Faces sample project</description>

    <properties>
        <!-- java -->
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.source>17</maven.compiler.source>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- otras -->
        <maven.compiler.release>17</maven.compiler.release>
        <failOnMissingWebXml>false</failOnMissingWebXml>

        <!-- variables de versiones  -->
        <junit.version>5.9.2</junit.version>
        <!-- Wildfly server-->
        <wildfly.version>27.0.0.Final</wildfly.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- jakarta -->
            <dependency>
                <groupId>jakarta.platform</groupId>
                <artifactId>jakarta.jakartaee-api</artifactId>
                <version>10.0.0</version>
                <!-- provide indica que el servidor lo proveerÃ¡  -->
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
        </dependency>


        <!-- persistentica -->
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
            <version>4.0.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>6.0.2.Final</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>3.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>7.0.5.Final</version>
        </dependency>


    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
            </plugin>

        </plugins>

    </build>

    <!-- fundamental para diferentes servidores -->
    <profiles>

        <profile>
            <id>wildfly</id>
            <dependencies>
            </dependencies>
            <properties>
                <!-- Wildfly server -->
                <wildfly.artifactId>wildfly-preview-dist</wildfly.artifactId>
                <jboss-as.home>${project.build.directory}/wildfly-preview-${wildfly.version}</jboss-as.home>
            </properties>
            <build>
                <plugins>

                    <!-- unpack a copy of WildFly-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.6.0</version>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>${wildfly.artifactId}</artifactId>
                                            <version>${wildfly.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- The WildFly plugin deploys your war to a local running WildFly container -->
                    <!-- To use, run: mvn package wildfly:deploy -->
                    <!-- For Jakarta EE 9, use `wildfly-preview-dist` as artifactId instead to start and deploy applications-->
                    <!-- Run: mvn clean wildfly:run -PWildfly -Dwildfly.artifactId=wildfly-preview-dist -Dwildfly.version=22.0.0.Alpha1 -->
                    <!-- or set the `jboss-as.home` to run: mvn clean wildfly:run -PWildfly -Djboss-as.home=D:\appsvr\wildfly-preview-22.0.0.Alpha1-->
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>4.1.0.Final</version>
                    </plugin>
                </plugins>
            </build>
            <repositories>
                <repository>
                    <id>opensaml</id>
                    <url>https://build.shibboleth.net/nexus/content/repositories/releases/</url>
                </repository>
            </repositories>
        </profile>
        <profile>
            <id>openliberty</id>
            <dependencies>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.6.0</version>
                        <executions>
                            <execution>
                                <id>copy</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.derby</groupId>
                                    <artifactId>derby</artifactId>
                                    <version>10.14.2.0</version>
                                    <type>jar</type>
                                    <overWrite>false</overWrite>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/liberty/wlp/usr/shared/resources
                            </outputDirectory>
                        </configuration>
                    </plugin>
                    <!-- Enable liberty-maven-plugin -->
                    <plugin>
                        <groupId>io.openliberty.tools</groupId>
                        <artifactId>liberty-maven-plugin</artifactId>
                        <version>3.8.2</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>glassfish</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <cargo.zipUrlInstaller.downloadDir>${project.basedir}/installs</cargo.zipUrlInstaller.downloadDir>
            </properties>
            <dependencies>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven3-plugin</artifactId>
                        <version>1.10.9</version>
                        <configuration>

                            <configuration>
                                <!-- the configuration used to deploy -->
                                <home>${project.build.directory}/glassfish7x-home</home>
                                <properties>
                                    <cargo.remote.password></cargo.remote.password>
                                    <cargo.glassfish.removeDefaultDatasource>true
                                    </cargo.glassfish.removeDefaultDatasource>
                                </properties>
                                <datasources>
                                    <datasource>
                                        <driverClass>org.apache.derby.jdbc.EmbeddedDriver</driverClass>
                                        <url>jdbc:derby:derbyDB;create=true</url>
                                        <jndiName>jdbc/__default</jndiName>
                                        <username>APP</username>
                                        <password>nonemptypassword</password>
                                    </datasource>
                                </datasources>
                            </configuration>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>arq-glassfish-managed</id>
            <properties>
                <skipTests>false</skipTests>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.glassfish.main.distributions</groupId>
                                            <artifactId>glassfish</artifactId>
                                            <version></version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>3.1.2</version>
                        <configuration>
                            <argLine>
                                --add-opens java.base/java.lang=ALL-UNNAMED
                            </argLine>
                            <environmentVariables>
                                <GLASSFISH_HOME>${project.build.directory}/glassfish7</GLASSFISH_HOME>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>firefox</id>
            <properties>
                <browser>firefox</browser>
            </properties>
        </profile>
        <profile>
            <id>chrome</id>
            <properties>
                <browser>chrome</browser>
            </properties>
        </profile>
        <profile>
            <id>chromeheadless</id>
            <properties>
                <browser>chromeheadless</browser>
            </properties>
        </profile>
    </profiles>


</project>